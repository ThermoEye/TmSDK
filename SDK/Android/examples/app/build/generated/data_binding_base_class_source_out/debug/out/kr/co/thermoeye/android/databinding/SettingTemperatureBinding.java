// Generated by view binder compiler. Do not edit!
package kr.co.thermoeye.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.thermoeye.android.R;

public final class SettingTemperatureBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout settingTemperature;

  @NonNull
  public final Spinner spinnerTemp;

  @NonNull
  public final TextView textViewAvg;

  @NonNull
  public final TextView textViewAvgTempVal;

  @NonNull
  public final TextView textViewMax;

  @NonNull
  public final TextView textViewMaxTempVal;

  @NonNull
  public final TextView textViewMin;

  @NonNull
  public final TextView textViewMinTempVal;

  @NonNull
  public final TextView textViewTempUnit;

  private SettingTemperatureBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout settingTemperature, @NonNull Spinner spinnerTemp,
      @NonNull TextView textViewAvg, @NonNull TextView textViewAvgTempVal,
      @NonNull TextView textViewMax, @NonNull TextView textViewMaxTempVal,
      @NonNull TextView textViewMin, @NonNull TextView textViewMinTempVal,
      @NonNull TextView textViewTempUnit) {
    this.rootView = rootView;
    this.settingTemperature = settingTemperature;
    this.spinnerTemp = spinnerTemp;
    this.textViewAvg = textViewAvg;
    this.textViewAvgTempVal = textViewAvgTempVal;
    this.textViewMax = textViewMax;
    this.textViewMaxTempVal = textViewMaxTempVal;
    this.textViewMin = textViewMin;
    this.textViewMinTempVal = textViewMinTempVal;
    this.textViewTempUnit = textViewTempUnit;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingTemperatureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingTemperatureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.setting_temperature, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingTemperatureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.setting_temperature;
      LinearLayout settingTemperature = ViewBindings.findChildViewById(rootView, id);
      if (settingTemperature == null) {
        break missingId;
      }

      id = R.id.spinner_temp;
      Spinner spinnerTemp = ViewBindings.findChildViewById(rootView, id);
      if (spinnerTemp == null) {
        break missingId;
      }

      id = R.id.textView_avg;
      TextView textViewAvg = ViewBindings.findChildViewById(rootView, id);
      if (textViewAvg == null) {
        break missingId;
      }

      id = R.id.textView_avgTempVal;
      TextView textViewAvgTempVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewAvgTempVal == null) {
        break missingId;
      }

      id = R.id.textView_max;
      TextView textViewMax = ViewBindings.findChildViewById(rootView, id);
      if (textViewMax == null) {
        break missingId;
      }

      id = R.id.textView_maxTempVal;
      TextView textViewMaxTempVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewMaxTempVal == null) {
        break missingId;
      }

      id = R.id.textView_min;
      TextView textViewMin = ViewBindings.findChildViewById(rootView, id);
      if (textViewMin == null) {
        break missingId;
      }

      id = R.id.textView_minTempVal;
      TextView textViewMinTempVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewMinTempVal == null) {
        break missingId;
      }

      id = R.id.textView_tempUnit;
      TextView textViewTempUnit = ViewBindings.findChildViewById(rootView, id);
      if (textViewTempUnit == null) {
        break missingId;
      }

      return new SettingTemperatureBinding((ConstraintLayout) rootView, settingTemperature,
          spinnerTemp, textViewAvg, textViewAvgTempVal, textViewMax, textViewMaxTempVal,
          textViewMin, textViewMinTempVal, textViewTempUnit);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
