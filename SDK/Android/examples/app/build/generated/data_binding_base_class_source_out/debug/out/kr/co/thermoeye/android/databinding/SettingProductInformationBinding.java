// Generated by view binder compiler. Do not edit!
package kr.co.thermoeye.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kr.co.thermoeye.android.R;

public final class SettingProductInformationBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayout settingProductInformation;

  @NonNull
  public final TextView textViewBootloaderVersion;

  @NonNull
  public final TextView textViewBootloaderVersionVal;

  @NonNull
  public final TextView textViewFwVersion;

  @NonNull
  public final TextView textViewFwVersionVal;

  @NonNull
  public final TextView textViewHwVersion;

  @NonNull
  public final TextView textViewHwVersionVal;

  @NonNull
  public final TextView textViewProductModel;

  @NonNull
  public final TextView textViewProductModelVal;

  @NonNull
  public final TextView textViewProductSerial;

  @NonNull
  public final TextView textViewProductSerialVal;

  @NonNull
  public final TextView textViewSensorModel;

  @NonNull
  public final TextView textViewSensorModelVal;

  @NonNull
  public final TextView textViewSensorSerial;

  @NonNull
  public final TextView textViewSensorSerialVal;

  @NonNull
  public final TextView textViewSensorUptime;

  @NonNull
  public final TextView textViewSensorUptimeVal;

  private SettingProductInformationBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayout settingProductInformation, @NonNull TextView textViewBootloaderVersion,
      @NonNull TextView textViewBootloaderVersionVal, @NonNull TextView textViewFwVersion,
      @NonNull TextView textViewFwVersionVal, @NonNull TextView textViewHwVersion,
      @NonNull TextView textViewHwVersionVal, @NonNull TextView textViewProductModel,
      @NonNull TextView textViewProductModelVal, @NonNull TextView textViewProductSerial,
      @NonNull TextView textViewProductSerialVal, @NonNull TextView textViewSensorModel,
      @NonNull TextView textViewSensorModelVal, @NonNull TextView textViewSensorSerial,
      @NonNull TextView textViewSensorSerialVal, @NonNull TextView textViewSensorUptime,
      @NonNull TextView textViewSensorUptimeVal) {
    this.rootView = rootView;
    this.settingProductInformation = settingProductInformation;
    this.textViewBootloaderVersion = textViewBootloaderVersion;
    this.textViewBootloaderVersionVal = textViewBootloaderVersionVal;
    this.textViewFwVersion = textViewFwVersion;
    this.textViewFwVersionVal = textViewFwVersionVal;
    this.textViewHwVersion = textViewHwVersion;
    this.textViewHwVersionVal = textViewHwVersionVal;
    this.textViewProductModel = textViewProductModel;
    this.textViewProductModelVal = textViewProductModelVal;
    this.textViewProductSerial = textViewProductSerial;
    this.textViewProductSerialVal = textViewProductSerialVal;
    this.textViewSensorModel = textViewSensorModel;
    this.textViewSensorModelVal = textViewSensorModelVal;
    this.textViewSensorSerial = textViewSensorSerial;
    this.textViewSensorSerialVal = textViewSensorSerialVal;
    this.textViewSensorUptime = textViewSensorUptime;
    this.textViewSensorUptimeVal = textViewSensorUptimeVal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SettingProductInformationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SettingProductInformationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.setting_product_information, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SettingProductInformationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.setting_product_information;
      LinearLayout settingProductInformation = ViewBindings.findChildViewById(rootView, id);
      if (settingProductInformation == null) {
        break missingId;
      }

      id = R.id.textView_bootloaderVersion;
      TextView textViewBootloaderVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewBootloaderVersion == null) {
        break missingId;
      }

      id = R.id.textView_bootloaderVersionVal;
      TextView textViewBootloaderVersionVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewBootloaderVersionVal == null) {
        break missingId;
      }

      id = R.id.textView_fwVersion;
      TextView textViewFwVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewFwVersion == null) {
        break missingId;
      }

      id = R.id.textView_fwVersionVal;
      TextView textViewFwVersionVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewFwVersionVal == null) {
        break missingId;
      }

      id = R.id.textView_hwVersion;
      TextView textViewHwVersion = ViewBindings.findChildViewById(rootView, id);
      if (textViewHwVersion == null) {
        break missingId;
      }

      id = R.id.textView_hwVersionVal;
      TextView textViewHwVersionVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewHwVersionVal == null) {
        break missingId;
      }

      id = R.id.textView_productModel;
      TextView textViewProductModel = ViewBindings.findChildViewById(rootView, id);
      if (textViewProductModel == null) {
        break missingId;
      }

      id = R.id.textView_productModelVal;
      TextView textViewProductModelVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewProductModelVal == null) {
        break missingId;
      }

      id = R.id.textView_productSerial;
      TextView textViewProductSerial = ViewBindings.findChildViewById(rootView, id);
      if (textViewProductSerial == null) {
        break missingId;
      }

      id = R.id.textView_productSerialVal;
      TextView textViewProductSerialVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewProductSerialVal == null) {
        break missingId;
      }

      id = R.id.textView_sensorModel;
      TextView textViewSensorModel = ViewBindings.findChildViewById(rootView, id);
      if (textViewSensorModel == null) {
        break missingId;
      }

      id = R.id.textView_sensorModelVal;
      TextView textViewSensorModelVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewSensorModelVal == null) {
        break missingId;
      }

      id = R.id.textView_sensorSerial;
      TextView textViewSensorSerial = ViewBindings.findChildViewById(rootView, id);
      if (textViewSensorSerial == null) {
        break missingId;
      }

      id = R.id.textView_sensorSerialVal;
      TextView textViewSensorSerialVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewSensorSerialVal == null) {
        break missingId;
      }

      id = R.id.textView_sensorUptime;
      TextView textViewSensorUptime = ViewBindings.findChildViewById(rootView, id);
      if (textViewSensorUptime == null) {
        break missingId;
      }

      id = R.id.textView_sensorUptimeVal;
      TextView textViewSensorUptimeVal = ViewBindings.findChildViewById(rootView, id);
      if (textViewSensorUptimeVal == null) {
        break missingId;
      }

      return new SettingProductInformationBinding((ConstraintLayout) rootView,
          settingProductInformation, textViewBootloaderVersion, textViewBootloaderVersionVal,
          textViewFwVersion, textViewFwVersionVal, textViewHwVersion, textViewHwVersionVal,
          textViewProductModel, textViewProductModelVal, textViewProductSerial,
          textViewProductSerialVal, textViewSensorModel, textViewSensorModelVal,
          textViewSensorSerial, textViewSensorSerialVal, textViewSensorUptime,
          textViewSensorUptimeVal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
